% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cloneman-package.R
\docType{package}
\name{cloneman}
\alias{cloneman}
\alias{cloneman-package}
\title{cloneman: a package to parse and manage information from Copy Number calling and Clone Inference tools.}
\description{
There exist many programs that are used to infer the copy number abberations in samples
They typically infer the copy number segments (either as integer numbers, e.g. 1, 3, 4 copies etc)
or as log ratios to the "normal" coverage.
Each program contains produces its own specific output format, in one or multiple files.

cloneman implements functions to parse and handle CNV segments and clonal information from various
common packages
At this point for CNV (and clonal information if available) we can use
ASCAT, CloneCNA, ControlFreec, FACETS, SuperFreq.
For clonal information (which includes both CNV and SNV events) we can use
SuperFreq, PhyloWGS
For clonal information based only on SNV events we can use
PyClone-VI, Sciclone, FastClone.
The structure of the object contains
\itemize{
\item dataframe with clone information, i.e. name, CCF, number of SNV events and number of CNV segments
\item GRangesList with CNV segments, each member of the list containst the segments assigned to a clone
if the events of multiple clones are overlapping, e.g. if a maternal clone is present with all the events
and a daughter clone is also having some of the maternal events
the GRangesList elements must be preprocessed
\item GRanges list with SNV events.
The parse* functions return typically GRanges objects with segments and/or SNVs
the load* functions create cloneobj with more rich information
}

This package was conceived in an attempt to normalize these outputs in a standard R format
with a set of predetermined columns and objects that can be used for downstream analysis.
}
\section{CNV segments}{


The simplest parsed output of these tools is a list of segments.
More specifically for CNVs a GRanges object is produced with all the segments and their
associated information

The following columns are added to the metadata columns of the GRanges by the \strong{parseXXX} functions

\strong{total.allele.copies}: the total number of alleles of that segment,

\strong{major.allele.copies}: the number of copies of the \emph{major} allele,

\strong{minor.allele.copies}: the number of copies of the \emph{minor} allele,

\strong{normal.allele.copies}: the number of copies expected for a normal sample (typically coming from the normal ploidy of the sample)

\strong{cnv.ccf}: represents the cellular abundance of an event and added whenever this is possible.

\strong{cnv.flag}: For each segment depending on the combination of the above values a flag is added to indicate the type and
value of the aberration according to the schema:\tabular{lll}{
   \strong{total.allele.copies} \tab \strong{minor.allele.copies} \tab \strong{cnv.flag} \cr
   0 \tab 0 \tab HOMDEL \cr
   0 \tab NA \tab HOMDEL \cr
   1 \tab 0 \tab HETDEL \cr
   1 \tab NA \tab HETDEL \cr
   2 \tab 0 \tab NEUT-LOH \cr
   2 \tab 1 \tab NEUT \cr
   2 \tab NA \tab NEUT/Unknown \cr
   2+ \tab 0 \tab AMP-LOH \cr
   2+ \tab 1+ \tab AMP \cr
   2+ \tab NA \tab AMP-\link{LOH?} \cr
}


the \strong{loadXXX} functions extend the capabilities to create more complex objects where
for methods where the ploidy is predicted it is parsed and added in the attribute \emph{ploidy}, as
well as the purity in the attribute \emph{purity}.
Since this package was developed with human genome in mind a column caled \emph{normal.allele.copies} is added
with the default value of '2'
and for the Y (chrY) chromosome this is set to 1
}

\section{SNV events}{


The SNV events are not parsed with explicit parsers in this case.
However, VariantAnnotation is an excellent tool that can be used to parse VCF files
and subsequently use the resulting object in this package.
There is the requirement to add the column 'snv.ccf' or 'snv.vaf' to the mutations
}

\section{Clone Abundance}{


The clone abundance can be calculated by the CNV calling method, but can also be computed from SNVs, using tools such as Sciclone, Pyclone, Pyclone-vi, Fastclone etc.
There are two ways of expressing the clone abundance
one as \emph{VAF} (variant allele frequency) and as \emph{CCF} (cellular clone frequency).
Since we typically assume a diploid baseline, the VAF is typically the frequency of the mutation observed on a single allele and it is half of the CCF.
To avoid this confusion we include both in the results

\strong{CCF}: represents the cellular abundance of an event.

\strong{VAF}: represents the variant allele frequency of an event. Typically for events not on amplified/deleted regions CCF=2 * VAF.
If both CCF and VAF are provided then CCF is used.

NOTE: this program is not trying to predict the CCF/VAF or clone abundance from the data.
For this purpose programs like the ones listed above are designed and work very well.
This program is intended to provide a consistent parsing mechanism for the results of such tools.
}

\section{list of supported tools}{
\tabular{lll}{
   \strong{tool} \tab \strong{type of data} \tab \strong{comments} \cr
   \href{https://pubmed.ncbi.nlm.nih.gov/27930809/}{ASCAT} \tab CNV/purity/ploidy \tab no clone identification \cr
   \href{https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-016-1174-7}{CloneCNA} \tab CNV/CI/purity/ploidy \tab  \cr
   \href{http://bioinformatics.oxfordjournals.org/content/28/3/423.long}{ControlFreec} \tab CNV/CI/purity/ploidy \tab CI not working well, ignored in this version \cr
   \href{https://pubmed.ncbi.nlm.nih.gov/27270079/}{FACETS} \tab CNV/CI/purity/ploidy \tab  \cr
   \href{https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1007603}{SuperFreq} \tab CNV/CI/purity/ploidy \tab  \cr
}
}

\section{cloneman functions}{

\strong{Simple parsers}

\code{\link[=parseFACETS]{parseFACETS()}} : parse a dataframe produced by FACETS.

\code{\link[=parseFACETS_rds]{parseFACETS_rds()}}: load an Rdata file produced by FACETS. This is the preferred method in order to retain additional information such as purity and ploidy.

\code{\link[=parseFACETS_file]{parseFACETS_file()}}: load a tab delimited file with segments produced by FACETS. Additional information (e.g. purity) is not retained

\code{\link[=parseCloneCNA]{parseCloneCNA()}}: parse a dataframe produced by CloneCNA

\code{\link[=parseCloneCNA_file]{parseCloneCNA_file()}}: parse a file produced by CloneCNA. This is the preferred method in order to retain additional information.

\code{\link[=parseCfreec]{parseCfreec()}}: parse a dataframe with segments produced by ControlFreec.

\code{\link[=parseCfreec_file]{parseCfreec_file()}}: parse a _CNV or _CNV.pvalue.txt file produced by ControlFreec

\code{\link[=parseSuperFreq_CNV]{parseSuperFreq_CNV()}}: parse the files from the output of SuperFreq and get the CNV segments. It assumes the standard structure of a director produced by SuperFreq

\code{\link[=parseSuperFreq_SNV]{parseSuperFreq_SNV()}}: parse the files from the output of SuperFreq and get the SNV events. It assumes the standard structure of a director produced by SuperFreq
}

\author{
\strong{Maintainer}: Konstantinos Mavrommatis \email{mavrommatis.konstantinos@gmail.com}

}
\keyword{internal}
